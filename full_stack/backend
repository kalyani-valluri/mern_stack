
const express = require('express');       //express
const mongoose = require('mongoose');     //mongoose
const cors = require('cors');
app.use(cors());


const app = express();   //obj
app.use(express.json()); //convert data into JSON
mongoose.connect('mongodb://localhost:27017/todo_database')
.then( ()=>console.log("connected"))
.catch((err)=>console.log("not connected"+err))

const todoschema = new mongoose.Schema({
    title : String,
    description : String
})
 
const todoModel = mongoose.model('task',todoschema)

//add some data
app.post('/todo',async (req,res)=>{    
    const {title,description}= req.body;

    try{
       const newtodo = new todoModel ({title,description});
       await newtodo.save();
       res.status(200).json(newtodo);
    }
    catch{
        console.log("error")
        res.status(500).json({error:"Error saving todo"});
    }
})

app.get('/todo',async (req,res)=>{
   try{
        const todo = await todoModel.find()
        res.json(todo)
    }
    catch{
        console.log("error")
        res.status(500).json({error:"Error saving todo"});
    }
})

//update the data
app.put('/todo/:id',async (req,res)=>{
    const {title,description} = req.body;
    const id = req.params.id
    try{
        const u_todo = await todoModel.findByIdAndUpdate(
            id,
            {title,description},
            {new : true}
        )
        if (u_todo){
            res.json(u_todo)
        }
        else{
            res.status(404).json({message:"error"})
        }
    }
    catch{
        console.log("error")
        res.status(500).json({error:"Error saving todo"});
    }
})
//delete data
app.delete('/todo/:id',async (req,res) => {
       const id = req.params.id
    try {
    await todoModel.findByIdAndDelete(id)
    res.status(200).json({message : " deleted successfully"})
    }
    catch{
        console.log("error")
        res.status(500).json({error:"Error saving todo"});
    }
   
})
const port = 3001;
app.listen(port, ()=>{
    console.log("port:"+port)
})
